Nonterminal,def,id,lparem,rparem,ini_llave,return,dotcomma,fin_llave,comma,equal,int,bool,num,TRUE,FALSE,addition,subtract,division,multiplication,if,minor,mayor,else,$
,,,,,,,,,,,,,,,,,,,,,,,,
PROGRAM,PROGRAM -> FUNCTIONS STATEMENTS,PROGRAM -> FUNCTIONS STATEMENTS,,,,,,,,,PROGRAM -> FUNCTIONS STATEMENTS,PROGRAM -> FUNCTIONS STATEMENTS,,,,,,,,PROGRAM -> FUNCTIONS STATEMENTS,,,PROGRAM -> FUNCTIONS STATEMENTS,PROGRAM -> FUNCTIONS STATEMENTS
,,,,,,,,,,,,,,,,,,,,,,,,
FUNCTIONS,FUNCTIONS -> FUNCTION FUNCTIONS,FUNCTIONS -> '',,,,,,,,,FUNCTIONS -> '',FUNCTIONS -> '',,,,,,,,FUNCTIONS -> '',,,FUNCTIONS -> '',FUNCTIONS -> ''
,,,,,,,,,,,,,,,,,,,,,,,,
FUNCTION,FUNCTION -> def id lparem PARATYS rparem ini_llave STATEMENTS return EXP dotcomma fin_llave,,,,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,,,
PARATYS,,,,PARATYS -> '',,,,,,,PARATYS -> TYPE id PARATY,PARATYS -> TYPE id PARATY,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,,,
PARATY,,,,PARATY -> '',,,,,PARATY -> comma TYPE id PARATY,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,,,
STATEMENTS,,STATEMENTS -> STATEMENT STATEMENTS,,,,STATEMENTS -> '',,STATEMENTS -> '',,,STATEMENTS -> STATEMENT STATEMENTS,STATEMENTS -> STATEMENT STATEMENTS,,,,,,,,STATEMENTS -> STATEMENT STATEMENTS,,,STATEMENTS -> STATEMENT STATEMENTS,STATEMENTS -> ''
,,,,,,,,,,,,,,,,,,,,,,,,
STATEMENT,,STATEMENT -> ASSIGN,,,,,,,,,STATEMENT -> DECLARATION,STATEMENT -> DECLARATION,,,,,,,,STATEMENT -> IF,,,STATEMENT -> ELSE,
,,,,,,,,,,,,,,,,,,,,,,,,
DECLARATION,,,,,,,,,,,DECLARATION -> TYPE id equal EXP dotcomma,DECLARATION -> TYPE id equal EXP dotcomma,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,,,
TYPE,,,,,,,,,,,TYPE -> int,TYPE -> bool,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,,,
ASSIGN,,ASSIGN -> id equal EXP dotcomma,,,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,,,
EXP,,EXP -> T E',EXP -> T E',,,,,,,,,,EXP -> T E',EXP -> T E',EXP -> T E',,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,,,
E',,,,E' -> '',,,E' -> '',,E' -> '',,,,,,,E' -> OPER T E',E' -> OPER T E',E' -> OPER T E',E' -> OPER T E',,E' -> '',E' -> '',,
,,,,,,,,,,,,,,,,,,,,,,,,
T,,T -> TERM,T -> lparem EXP rparem,,,,,,,,,,T -> TERM,T -> TERM,T -> TERM,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,,,
TERM,,TERM -> id INVOCACION,,,,,,,,,,,TERM -> num,TERM -> BOOLEAN,TERM -> BOOLEAN,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,,,
BOOLEAN,,,,,,,,,,,,,,BOOLEAN -> true,BOOLEAN -> false,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,,,
INVOCACION,,,INVOCACION -> lparem PARAMS rparem,INVOCACION -> '',,,INVOCACION -> '',,INVOCACION -> '',,,,,,,INVOCACION -> '',INVOCACION -> '',INVOCACION -> '',INVOCACION -> '',,INVOCACION -> '',INVOCACION -> '',,
,,,,,,,,,,,,,,,,,,,,,,,,
OPER,,,,,,,,,,,,,,,,OPER -> addition,OPER -> subtract,OPER -> division,OPER -> multiplication,,,,,
,,,,,,,,,,,,,,,,,,,,,,,,
PARAMS,,PARAMS -> EXP PARAM,PARAMS -> EXP PARAM,PARAMS -> '',,,,,,,,,PARAMS -> EXP PARAM,PARAMS -> EXP PARAM,PARAMS -> EXP PARAM,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,,,
PARAM,,,,PARAM -> '',,,,,PARAM -> comma EXP PARAM,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,,,
IF,,,,,,,,,,,,,,,,,,,,IF -> if lparem CONDITION rparem ini_llave STATEMENTS fin_llave,,,,
,,,,,,,,,,,,,,,,,,,,,,,,
CONDITION,,CONDITION -> EXP OPERCON EXP,CONDITION -> EXP OPERCON EXP,,,,,,,,,,CONDITION -> EXP OPERCON EXP,CONDITION -> EXP OPERCON EXP,CONDITION -> EXP OPERCON EXP,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,,,
OPERCON,,,,,,,,,,,,,,,,,,,,,OPERCON -> minor,OPERCON -> mayor,,
,,,,,,,,,,,,,,,,,,,,,,,,
ELSE,,,,,,,,,,,,,,,,,,,,,,,ELSE -> else ini_llave STATEMENTS fin_llave,